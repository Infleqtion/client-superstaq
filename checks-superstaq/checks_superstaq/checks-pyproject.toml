# Check script configuration:

[tool.pytest.ini_options]
addopts = "--disable-socket"
filterwarnings = [
  "ignore::UserWarning:qtrl.*",
  "ignore::PendingDeprecationWarning:qtrl.utils.config",
  "ignore::PendingDeprecationWarning:ruamel.yaml.main",
]

[tool.ruff]
line-length = 100
target-version = "py39"
show-fixes = true

# Specific linting rules to enable in `ruff`
lint.select = [
  "A",      # flake8-builtins
  "ANN",    # flake8-annotations checks
  "ARG",    # Unused argument in a function/method
  "B",      # flake8-bugbear checks
  "C",      # flake8-comprehensions, mccabe checks
  "COM818", # trailing-comma-on-bare-tuple error
  "D",      # pydocstyle checks
  "E",      # pycodestyle checks
  "ERA",    # Commented-out code checks
  "F",      # pyflakes checks
  "FA",     # flake8-future-annotations checks
  "FAST",   # FastAPI checks
  "FLY",    # flynt checks
  "FURB",   # refurb checks
  "I",      # isort checks
  "ISC",    # flake8-implicit-str-concat checks
  "NPY201", # numpy2-deprecation
  "PERF",   # Perflint checks
  "PGH",    # pygrep-hooks checks
  "PIE",    # flake8-pie checks
  "PL",     # pylint checks
  "PLE",    # pylint errors
  "PT",     # flake8-pytest-style
  "PYI",    # flake8-pyi checks
  "Q",      # flake8-quotes checks
  "RSE",    # flake8-raise checks
  "RUF",    # Ruff-specific checks
  "SIM",    # flake8-simplify checks
  "T10",    # flake8-debugger checks
  "T20",    # flake8-print checks
  "TC",     # flake8-type-checking checks
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade checks
  "W",      # pycodestyle warnings checks
]
lint.ignore = [
  "ANN401",
  "ARG002",
  "ARG005",
  "B008",
  "B019",
  "B023",
  "B034",
  "B904",
  "B905",
  "C409",    # See https://github.com/astral-sh/ruff/issues/12912
  "C416",
  "C420",
  "D100",
  "D104",
  "D105",
  "D107",
  "D205",
  "D301",
  "E731",
  "FAST002",
  "PERF401",
  "PLC0105",
  "PLC0206",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "PLW0127",
  "PLW2901",
  "PT012",
  "PT019",
  "PT022",
  "PYI041",
  "RUF001",
  "RUF002",
  "SIM102",
  "SIM105",
  "SIM108",
  "SIM118",
  "TC003",
  "UP038",
  # The following are excluded to not conflict with `ruff format`:
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "UP038",
  "W191",
]

# Allow autofix for all enabled rules (when `--fix` is passed)
lint.fixable = ["ALL"]
lint.unfixable = []

# Allow unused variables when underscore-prefixed
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["collections.abc"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["D101", "D102", "D103", "E501", "ERA001", "T201"]
"*test.py" = ["D101", "D102", "D103"]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ["property", "classmethod", "staticmethod"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
case-sensitive = false


[tool.mypy]
pretty = true
ignore_missing_imports = true
warn_redundant_casts = true
show_error_codes = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_unused_ignores = true
install_types = true
non_interactive = true
no_implicit_optional = true
plugins = ["numpy.typing.mypy_plugin", "pydantic.mypy"]

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:", "@overload"]

[tool.coverage.run]
include = ["./*"]
concurrency = ["thread"]
