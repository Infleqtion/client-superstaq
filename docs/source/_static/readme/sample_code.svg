<!-- <svg width="600" height="300" xmlns="http://www.w3.org/2000/svg">
  <foreignObject width="100%" height="100%">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <style>
        .container {
          display: flex;
          width: 100%;
          height: 300px;
          background-color: black;
          color: white;
        }
      </style>

      <div class="container">
        <h1>Hi there, my name is Nikola ðŸ‘‹</h1>
      </div>
    </div>
  </foreignObject>
</svg> -->


<svg width="1000" height="600" xmlns="http://www.w3.org/2000/svg">
  <foreignObject  width="100%" height="100%">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <style>
        .window {
          padding: 10px;
          width: 900;
          height: 580px;
          background-color: grey;
          color: white;
          border-radius: 20px;
          font-size: 30px;
        }
        .buttons {
          width: 100%;
        }
        .button {
          background-color: white;
          border-radius: 50%
          height: 10px;
          width: 10px;
        }
        .tabs {}
        .display {
          font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
          overflow: hidden;
          animation: typing 5s steps(30, end);
        }

        @keyframes typing {
          from { width: 0 }
          to { width: 100% }
        }
      </style>

      <div class="window">
        <div class="display">
        import qiskit
        import qiskit_superstaq as qss

        superstaq = qss.SuperstaQProvider(token)
        backend = superstaq.get_backend("ibmq_qasm_simulator")

        # Standard bell circuit
        qc = qiskit.QuantumCircuit(2, 2)
        qc.h(0)
        qc.cx(0, 1)
        qc.measure([0, 1], [0, 1])

        job = backend.run(qc, shots=100)
        print(result.get_counts())
        </div>
      </div>
    </div>
  </foreignObject>

</svg>
